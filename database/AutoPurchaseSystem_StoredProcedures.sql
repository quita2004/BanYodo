USE AUTO_PURCHASE_SYSTEM;
GO

-- =====================================
-- 1. SP_CLIENT_PRELOGIN
-- =====================================
CREATE OR ALTER PROCEDURE SP_CLIENT_PRELOGIN
    @LICENSE_KEY NVARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @LICENSE_ID UNIQUEIDENTIFIER;

    SELECT @LICENSE_ID = L.LICENSE_ID
    FROM T_LICENSES L
    INNER JOIN T_LICENSE_ASSIGNMENTS LA ON L.LICENSE_ID = LA.LICENSE_ID
    WHERE L.LICENSE_KEY = @LICENSE_KEY
      AND L.IS_ACTIVE = 1
      AND L.EXPIRED_AT > GETDATE()
      AND LA.IS_LOGGED_IN = 0;

    IF @LICENSE_ID IS NOT NULL
    BEGIN
        UPDATE T_LICENSE_ASSIGNMENTS
        SET IS_LOGGED_IN = 1,
            LAST_LOGIN_AT = GETDATE()
        WHERE LICENSE_ID = @LICENSE_ID;
    END

    SELECT @LICENSE_ID AS LICENSE_ID;
END
GO

-- =====================================
-- 2. SP_CLIENT_LOGOUT
-- =====================================
CREATE OR ALTER PROCEDURE SP_CLIENT_LOGOUT
    @LICENSE_ID UNIQUEIDENTIFIER
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE T_LICENSE_ASSIGNMENTS
    SET IS_LOGGED_IN = 0,
        LAST_LOGOUT_AT = GETDATE()
    WHERE LICENSE_ID = @LICENSE_ID;
END
GO

-- =====================================
-- 3. SP_ADMIN_ADD_LICENSE
-- =====================================
CREATE OR ALTER PROCEDURE SP_ADMIN_ADD_LICENSE
    @LICENSE_KEY NVARCHAR(100),
    @EXPIRED_AT DATETIME,
    @IS_ACTIVE BIT
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO T_LICENSES (LICENSE_ID, LICENSE_KEY, CREATED_AT, EXPIRED_AT, IS_ACTIVE)
    VALUES (NEWID(), @LICENSE_KEY, GETDATE(), @EXPIRED_AT, @IS_ACTIVE);
END
GO

-- =====================================
-- 4. SP_ADMIN_UPDATE_LICENSE
-- =====================================
CREATE OR ALTER PROCEDURE SP_ADMIN_UPDATE_LICENSE
    @LICENSE_ID UNIQUEIDENTIFIER,
    @LICENSE_KEY NVARCHAR(100),
    @EXPIRED_AT DATETIME,
    @IS_ACTIVE BIT
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE T_LICENSES
    SET LICENSE_KEY = @LICENSE_KEY,
        EXPIRED_AT = @EXPIRED_AT,
        IS_ACTIVE = @IS_ACTIVE
    WHERE LICENSE_ID = @LICENSE_ID;
END
GO

-- =====================================
-- 5. SP_ADMIN_DELETE_LICENSE
-- =====================================
CREATE OR ALTER PROCEDURE SP_ADMIN_DELETE_LICENSE
    @LICENSE_ID UNIQUEIDENTIFIER
AS
BEGIN
    SET NOCOUNT ON;

    DELETE FROM T_LICENSE_ASSIGNMENTS WHERE LICENSE_ID = @LICENSE_ID;
    DELETE FROM T_LICENSES WHERE LICENSE_ID = @LICENSE_ID;
END
GO

-- =====================================
-- 6. SP_ADMIN_LIST_LICENSES
-- =====================================
CREATE OR ALTER PROCEDURE SP_ADMIN_LIST_LICENSES
AS
BEGIN
    SET NOCOUNT ON;

    SELECT LICENSE_ID,
           LICENSE_KEY,
           CREATED_AT,
           EXPIRED_AT,
           IS_ACTIVE
    FROM T_LICENSES;
END
GO

-- =====================================
-- 7. SP_ADMIN_RESET_LICENSE_ASSIGNMENT
-- =====================================
CREATE OR ALTER PROCEDURE SP_ADMIN_RESET_LICENSE_ASSIGNMENT
    @LICENSE_ID UNIQUEIDENTIFIER
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE T_LICENSE_ASSIGNMENTS
    SET IS_LOGGED_IN = 0,
        LAST_LOGOUT_AT = GETDATE()
    WHERE LICENSE_ID = @LICENSE_ID;
END
GO


-- =====================================
-- 8. SP_ADMIN_LOGIN
-- =====================================
CREATE PROCEDURE SP_ADMIN_LOGIN
    @USERNAME NVARCHAR(50),
    @PASSWORD NVARCHAR(255)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @ADMIN_ID UNIQUEIDENTIFIER;

    SELECT @ADMIN_ID = ADMIN_ID
    FROM T_ADMIN_USERS
    WHERE USERNAME = @USERNAME
      AND PASSWORD_HASH = HASHBYTES('SHA2_256', CAST(@PASSWORD AS NVARCHAR(255));

    SELECT @ADMIN_ID AS ADMIN_ID;
END;
